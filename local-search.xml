<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>模拟退火算法</title>
    <link href="/2022/09/12/%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB%E7%AE%97%E6%B3%95/"/>
    <url>/2022/09/12/%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB%E7%AE%97%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="模拟退火算法-SAA"><a href="#模拟退火算法-SAA" class="headerlink" title="模拟退火算法 SAA"></a>模拟退火算法 SAA</h1><span id="more"></span><h2 id="一、核心内容"><a href="#一、核心内容" class="headerlink" title="一、核心内容"></a>一、核心内容</h2><p>　　　　　　　新解x1，新的函数值y1<br>　　　　　　　当前解x0，当前函数值y0<br>　　　　　　　最优解bestx，最优函数值besty<br>一个算法的核心之处就在于以下两方面：</p><div class="note note-secondary">            <p>核心一　通过当前解x0产生新解x1的规则，比如本算法就是通过对当前解x0进行随机扰动的方式得到新解x1。<br>核心二　接受新解的规则，比如本算法就是采用更优解直接接受，更差解按规则接受。</p>          </div><p>这个规则也就决定了该算法的优劣程度，这条规则越完美，算法得到的解就越快越准确。模拟退火算法的两条核心和规定的温度T都有关系！<br>下面给出模拟退火算法的两条核心规则：</p><div class="note note-secondary">            <p>核心一　产生新解<br>核心二　接受新解的伪代码</p>          </div><p>注意：每一轮后还要更新温度T，T&#x3D;k*T（0&lt;k&lt;1）</p><h2 id="二、实战例程"><a href="#二、实战例程" class="headerlink" title="二、实战例程"></a>二、实战例程</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs 复制">function [bestx,BEST_Y] = SAA()<br>%SAA 模拟退火算法寻找最优解<br>%   此处提供详细说明<br>dt = 0.5;<br>T_10_11 = 25;<br><br>x_min = [65,165,185,225,245];%解得上界和下界<br>x_max = [100,185,205,245,265];<br><br>L = 200;%每个温度下的迭代次数<br>k = 0.98;%温度衰减系数<br>T_m = 100;%初始温度<br>p = 300;<br>BEST_Y = zeros(1,p);<br>%% 随机生成全局最优解<br>f = 0;<br>while(f == 0)<br>    x0 = zeros(1,5);<br>    for i = 1:5<br>        x0(i) = x_min(i) +(x_max(i) - x_min(i))*rand(1);<br>    end<br>    temp = temperature_graph( x0(1)/60,x0(2) , x0(3),x0(4), x0(5), T_10_11,dt);%环境温度<br>    Temp_result = T(54.025,44.72,0.0047,temp,x0(1)/60,dt);<br>    if(boundary_f(Temp_result,dt) == 1)%满足制程要求<br>        f = 1;<br>    end<br>    y0 = extent(x0(1),x0(2) , x0(3),x0(4), x0(5), T_10_11,dt);%当前解得函数值<br><br>end<br>%% <br>bestx = x0;<br>besty = y0;<br>for i = 1:p<br>    for j = 1:L<br>        %根据新解产生规则产生新解<br>        f =0;<br>        while f==0<br>            m = randn(1,5);<br>            z = m/sqrt(sum(m.^2));<br>            x_new = x0 + z*T_m;<br>            %如果新解超出上下界,则进行校正<br>            for n = 1:5<br>                if(x_new(n)&lt;x_min(n))<br>                    r = rand(1);<br>                    x_new(n) = r*x_min(n) + (1-r)*x0(n);<br>                elseif(x_new(n)&gt;x_max(n))<br>                    r = rand(1);<br>                    x_new(n) = r*x_max(n) + (1-r)*x0(n);<br>                end<br>            end<br>            temp = temperature_graph( x_new(1)/60,x_new(2) , x_new(3),x_new(4), x_new(5), T_10_11,dt);%环境温度<br>            Temp_result = T(54.025,44.72,0.0047,temp,x_new(1)/60,dt);<br>            if(boundary_f(Temp_result,dt) == 1)%满足制程要求<br>                f = 1;<br>            end<br>        end<br>        x1 = x_new;%赋值新解<br>        y1 = extent(x1(1),x1(2) , x1(3),x1(4), x1(5), T_10_11,dt);%新解得函数值<br>        %如果新解的值小于当前解,则将新解值赋予当前接<br>        %否则根据metropolis准则计算是否接受新解<br>        if(y1 &lt; y0)<br>            x0 = x1; <br>            y0 = y1;<br>        else<br>            if rand(1)&lt;exp(-(y0 - y1)/T_m)<br>                x0 = x1;<br>                y0 = y1;<br>            end<br><br>        end<br>        %判断是否要更新找到的全局最优解<br>        if(y0 &lt; besty)<br>            bestx = x0;<br>            besty = y0;<br>        end<br><br>    end<br>    BEST_Y(i) = besty;%保存本轮找到的最小面积<br>    T_m = k*T_m;%温度下降<br>end<br>end<br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>数学建模</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新建第一个ROS工程文件</title>
    <link href="/2022/09/12/%E6%96%B0%E5%BB%BA%E7%AC%AC%E4%B8%80%E4%B8%AAROS%E5%B7%A5%E7%A8%8B%E6%96%87%E4%BB%B6/"/>
    <url>/2022/09/12/%E6%96%B0%E5%BB%BA%E7%AC%AC%E4%B8%80%E4%B8%AAROS%E5%B7%A5%E7%A8%8B%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p>从最基础的层面来学习ROS工程文件的内容，下面将采用两种方式建立一个ROS工程文件。一种是手动法，一种是利用VScode的方法。手动法能让你更容易理解这个文件构建的含义，从更低层的角度理解ROS工程文件。</p><span id="more"></span><h2 id="一、了解ROS工程文件的目录"><a href="#一、了解ROS工程文件的目录" class="headerlink" title="一、了解ROS工程文件的目录"></a>一、了解ROS工程文件的目录</h2><p>ROS工程文件的标准目录及各部分的作用</p><div class="note note-secondary">            <p>catkin_workspace　　&#x2F;&#x2F;工程文件的根文件夹，可以随意命名<br>　|<br>　|–devel　　&#x2F;&#x2F;开发空间<br>　|<br>　|–build　　&#x2F;&#x2F;编译空间<br>　|<br>　|__src　　　&#x2F;&#x2F;源码空间，用户主要编辑的部分<br>　　|<br>　　|–package1<br>　　|　　　　　　<br>　　|__package2<br>　　　　　|<br>　　　　　|–CMakeLists.txt<br>　　　　　|–package.xml<br>　　　　　|–scrpits<br>　　　　　|–msg<br>　　　　　|–srv<br>　　　　　|–include<br>　　　　　|–src<br>　　　　　|__launch</p>          </div><h2 id="二、手动法"><a href="#二、手动法" class="headerlink" title="二、手动法"></a>二、手动法</h2><h3 id="配置工作空间"><a href="#配置工作空间" class="headerlink" title="配置工作空间"></a>配置工作空间</h3><p>1.创建工作空间(也可以右键建文件夹)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs 复制">$ mkdir -p ~/catkin_ws/src<br>$ cd ~/catkin_ws/src<br>$ catkin_init_workspace<br></code></pre></td></tr></table></figure><p>2.编译工作空间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs 复制">$ cd ~/catkin_ws/<br>$ catkin_make<br></code></pre></td></tr></table></figure><p>3.设置环境变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 复制">$ source devel/setup.bash<br></code></pre></td></tr></table></figure><p>4.检查环境变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 复制">$ echo $ROS_PACKAGE_PATH<br></code></pre></td></tr></table></figure><h3 id="配置功能包"><a href="#配置功能包" class="headerlink" title="配置功能包"></a>配置功能包</h3><p>1.创建功能包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs 复制">$ cd ~/catkin_ws/src<br>$ catkin_create_pkg myfirst_pkg std_msgs roscpp<br></code></pre></td></tr></table></figure><p>2.编译功能包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs 复制">$ cd ~/catkin_ws<br>$ catkin_make<br>$ source devel/setup.bash<br></code></pre></td></tr></table></figure><h3 id="建立可执行文件"><a href="#建立可执行文件" class="headerlink" title="建立可执行文件"></a>建立可执行文件</h3><p>在package&#x2F;src下建.cpp文件，在package&#x2F;include&#x2F;package&#x2F;下建.h文件。</p><h3 id="配置CMakeLists-txt文件"><a href="#配置CMakeLists-txt文件" class="headerlink" title="配置CMakeLists.txt文件"></a>配置CMakeLists.txt文件</h3><p>配置的目的是规定编程时的可执行文件及其路径，以及可执行文件包含的头文件的路径。<br>打开该文本文件，主要有两个部分要修改，都在build部分<br>1.指定编译的.cpp文件<br>找到 Delcare a c++executable部分<br>在下面添加代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 复制">add_executable(包名 src/*.cpp src/*.cpp)<br></code></pre></td></tr></table></figure><p>2.指定头文件的所在地<br>找到 specify additional locations of header files<br>在下面修改代码为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs 复制">include_directories(<br>include<br>include/包名<br>$&#123;catkin_INCLUDE_DIRS&#125;<br>)<br></code></pre></td></tr></table></figure><h3 id="编译和运行"><a href="#编译和运行" class="headerlink" title="编译和运行"></a>编译和运行</h3><p>编译</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs 复制">$ catkin_make<br>$ source devel/setup.bash<br></code></pre></td></tr></table></figure><p>运行—-rosrun 功能包包名 包下的主函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 复制">$ rosrun myfirst_pkg main<br></code></pre></td></tr></table></figure><h2 id="三、利用VScode法建立工程文件"><a href="#三、利用VScode法建立工程文件" class="headerlink" title="三、利用VScode法建立工程文件"></a>三、利用VScode法建立工程文件</h2>]]></content>
    
    
    
    <tags>
      
      <tag>机器人操作系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ROS系统的安装</title>
    <link href="/2022/09/03/%E6%9C%BA%E5%99%A8%E4%BA%BA%E4%B8%93%E4%B8%9A%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/09/03/%E6%9C%BA%E5%99%A8%E4%BA%BA%E4%B8%93%E4%B8%9A%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="ROS系统"><a href="#ROS系统" class="headerlink" title="ROS系统"></a>ROS系统</h1><p>ROS全称robot operating system，是一种用于编写机器人软件的灵活框架，是工具、库和协议的集合。</p><span id="more"></span><p><a href="https://wiki.ros.org/">ROS官方网站</a></p><h2 id="安装ROS系统"><a href="#安装ROS系统" class="headerlink" title="安装ROS系统"></a>安装ROS系统</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ol><li><p>获取虚拟机VMware Player安装包<br><a href="https://customerconnect.vmware.com/en/downloads/details?downloadGroup=WKST-PLAYER-1624&productId=1039&rPId=91446#product_downloads">VMware Player官网</a><br>根据自己的电脑系统，选择对应的安装包。</p></li><li><p>获取Ubuntu系统安装包<br><a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases/">清华大学开源软件镜像站</a><br>Ubuntu官网下载会特别慢，所以建议用国内的镜像网站。<br>进入上面的网站后，选择你想安装的Ubuntu版本。我下载的是20.04版本，Ubuntu版本和ROS的版本是对应的，所以我下载的ROS版本是Noetic。对应关系如下，可以根据你想要的ROS版本下载相应版本的Ubuntu。</p></li></ol><table><thead><tr><th>Ubuntu版本</th><th>ROS名称</th><th>常用简称</th></tr></thead><tbody><tr><td>20.04</td><td>ROS Noetic Ninjemys</td><td>Noetic</td></tr><tr><td>18.04</td><td>ROS Melodic Morenia</td><td>Melodic</td></tr><tr><td>16.04</td><td>ROS Kinetic Kame</td><td>Kinetic</td></tr></tbody></table><h3 id="安装流程"><a href="#安装流程" class="headerlink" title="安装流程"></a>安装流程</h3><ol><li>安装虚拟机VMware Player<br>根据它的安装向导一步步安装就行，不过注意一下安装路径，建议改到一个c盘以外并且有60个G以上剩余空间的磁盘。（磁盘剩余，30G不能再少了，不然，在后面的学习过程中很难再在虚拟机中安装或运行一些需要的程序）</li><li>安装Ubuntu系统<br><a href="https://blog.csdn.net/weixin_44410537/article/details/100938963">Ubuntu 20.04 虚拟机安装教程</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>机器人操作系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MarkDown语法总结</title>
    <link href="/2022/08/28/hello-world/"/>
    <url>/2022/08/28/hello-world/</url>
    
    <content type="html"><![CDATA[<h2 id="一、如何写标签-note"><a href="#一、如何写标签-note" class="headerlink" title="一、如何写标签(note)"></a>一、如何写标签(note)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs 复制">&#123;% note success %&#125;<br>这是一个测试，测试标签功能。<br>&#123;% endnote %&#125;<br></code></pre></td></tr></table></figure><div class="note note-success">            <p>这是一个测试，测试标签功能。</p>          </div><p>还可以有其他的颜色</p><div class="note note-primary">            <p>primary</p>          </div><div class="note note-secondary">            <p>secondary</p>          </div><div class="note note-danger">            <p>danger</p>          </div><div class="note note-warning">            <p>warning</p>          </div><div class="note note-info">            <p>info</p>          </div><div class="note note-light">            <p>light</p>          </div><h2 id="二、如何控制文章的缩进"><a href="#二、如何控制文章的缩进" class="headerlink" title="二、如何控制文章的缩进"></a>二、如何控制文章的缩进</h2><p>将输入法切换到全角输入法，此时空格键就可以控制缩进</p><h2 id="三、如何绘制表格"><a href="#三、如何绘制表格" class="headerlink" title="三、如何绘制表格"></a>三、如何绘制表格</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs 复制">|表头一|表头二|表头三|<br>|-------|------|-------|<br>|（1，1）|（1，2）|（1，3）|<br>|（2，1）|（2，2）|（2，3）|<br>|（3，1）|（3，2）|（3，3）|<br></code></pre></td></tr></table></figure><table><thead><tr><th>表头一</th><th>表头二</th><th>表头三</th></tr></thead><tbody><tr><td>（1，1）</td><td>（1，2）</td><td>（1，3）</td></tr><tr><td>（2，1）</td><td>（2，2）</td><td>（2，3）</td></tr><tr><td>（3，1）</td><td>（3，2）</td><td>（3，3）</td></tr></tbody></table>]]></content>
    
    
    
    <tags>
      
      <tag>Blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
